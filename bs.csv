code,tag
#include<cstdio>  #include<algorithm>  using namespace std;  int a[300001];  int sum[300002];  int main()  {   int n k;   scanf("%d%d" &n &k);   for(int i=1;i<=n;i++)    scanf("%d" &a[i]);   sort(a+1 a+n+1);   int l=0 r=1e9;   while(l<r){    int mid=(l+r)>>1;    sum[0]=0;sum[1]=1;    for(int i=1 j=0;i<=n;i++){     while(a[i]-a[j+1]>mid)j++;     sum[i+1]=sum[i]+(i>=k&&sum[i-k+1]-sum[j]>0);    }    if(sum[n+1]>sum[n])r=mid;    else l=mid+1;   }   printf("%d\n" l);  },yes
#include<cstdio>  #include<algorithm>  using namespace std;  int a[300001];  int sum[300002];  int main()  {   int n k;   scanf("%d%d" &n &k);   for(int i=1;i<=n;i++)    scanf("%d" &a[i]);   sort(a+1 a+n+1);   int l=0 r=1e9;   while(l<r){    int mid=(l+r)>>1;    sum[0]=0;sum[1]=1;    for(int i=1 j=0;i<=n;i++){     while(a[i]-a[j+1]>mid)j++;     sum[i+1]=sum[i]+(i>=k&&sum[i-k+1]-sum[j]>0);    }    if(sum[n+1]>sum[n])r=mid;    else l=mid+1;   }   printf("%d\n" l);  }  ,yes
#include<bits/stdc++.h> using namespace std; const int maxn=3e5+7; int v[maxn]; int f[maxn]; //how much element can add into groups. int main() {  int n k;  scanf("%d%d" &n &k);  for(int i=1;i<=n;i++)   scanf("%d" &v[i]);  sort(v+1 v+1+n);  int l=0 r=v[n]-v[1];  while(l<=r)  {   int mid=(l+r)>>1;   int ll=0;   for(int i=k;i<=n;i++)   {    if(v[i]-v[f[i-k]+1]<=mid)     ll=i;    f[i]=ll;   }   if(f[n]==n)    r=mid-1;   else    l=mid+1;  }  printf("%d\n" l);  return 0; } ,yes
#include<cstdio> #include<algorithm> using namespace std; int a[300001]; int sum[300002]; int main() {  int n k;  scanf("%d%d" &n &k);  for(int i=1;i<=n;i++)   scanf("%d" &a[i]);  sort(a+1 a+n+1);  int l=0 r=1e9;  while(l<r){   int mid=(l+r)>>1;   sum[0]=0;sum[1]=1;   for(int i=1 j=0;i<=n;i++){    while(a[i]-a[j+1]>mid)j++;    sum[i+1]=sum[i]+(i>=k&&sum[i-k+1]-sum[j]>0);   }   if(sum[n+1]>sum[n])r=mid;   else l=mid+1;  }  printf("%d\n" l); }                                ,yes
?,yes
#include<bits/stdc++.h> using namespace std;  #define For(i l r) for (int i=(l);i<=(r);++i)  int a[300100] dp[300100] n k;  bool ok(int x){  int last=0;  memset(dp 0 sizeof(dp));  For (i k n){   if (a[i]-a[dp[i-k]+1]<=x)    dp[i]=last=i;   else dp[i]=last;  }  return (dp[n]==n); }  int main(){  scanf("%d%d" &n &k);  For (i 1 n) scanf("%d" &a[i]);  sort(a+1 a+n+1);  int l=-1 r=a[n];  while (l+1<r){   int mid=(l+r)/2;   if (ok(mid))    r=mid;    else l=mid;  }  printf("%d\n" r);  return 0; } ,yes
#include<bits/stdc++.h>  using namespace std;  const int maxn=3e5+7;  int v[maxn];  int f[maxn]; //how much element can add into groups.  int main()  {   int n k;   scanf("%d%d" &n &k);   for(int i=1;i<=n;i++)    scanf("%d" &v[i]);   sort(v+1 v+1+n);   int l=0 r=v[n]-v[1];   while(l<=r)   {    int mid=(l+r)>>1;    int ll=0;    for(int i=k;i<=n;i++)    {     if(v[i]-v[f[i-k]+1]<=mid)      ll=i;     f[i]=ll;    }    if(f[n]==n)     r=mid-1;    else     l=mid+1;   }   printf("%d\n" l);   return 0;  },yes
#include <stdio.h> #include <cmath> #include <algorithm> using namespace std; int dp[300017]  po[300017]; int main() {  int n  i  j  k  l  r  mid  pos  t;  scanf("%d%d"  &n  &k);  for(i = 1; i <= n; i++)  scanf("%d"  &po[i]);  sort(po+1 po+1+n);  l = -1  r = po[n]-po[1];  while(l+1 < r)  {   mid = (l+r)/2;   pos = 0;   for(i = k; i <= n; i++)   {    t = dp[i-k];    if(po[i]-po[t+1] <= mid)    pos = i;    dp[i] = pos;   }   if(dp[n] == n) r = mid;   else l = mid;  }  printf("%d\n"  r);  return 0; },yes
#include <iostream>  #include<algorithm>  using namespace std;  int n  k  a[300001]  l  r  m  dp[300001]  p;  bool f(int m) {   p = 0;   for (int i = k; i <= n; i++) {    if (a[i] - a[dp[i - k] + 1] <= m)p = i;    dp[i] = p;   }   return dp[n] == n;  }  int main() {   scanf("%d%d"  &n  &k);   for (int i = 1; i <= n; i++)scanf("%d" &a[i]);   sort(a + 1  a + n + 1);   l = 0  r = a[n] - a[1];   while (l <= r) {    m = (l + r) / 2;    if (f(m))r = m - 1;    else l = m + 1;   }   printf("%d\n"  r + 1);  },yes
#include<bits/stdc++.h>  using namespace std;  int s[300009];  int ch[300009];  main()  {   int n k l=-1 r=1e9 i j m ;   scanf("%d %d" &n &k);   for(i=0;i<n;i++)   {    scanf("%d" &s[i]);   }   sort(s s+n);   while(l+1<r)   {    m=(l+r)/2;    ch[0]=m;    for(i=0 j=0;i<n;i++)    {     if(ch[i]==m)     {         if(j-i<k)j=i+k-1;      if(j>=n)break;      while(s[j]-s[i]<=m)      {       j++;       ch[j]=m;       if(j>=n)break;      }      }    }    if(ch[n]==m)r=m;    else l=m;   }   printf("%d" r);  }  ,yes
?,yes
#include <cstdio>  #include <algorithm>  using namespace std;  int n m dp[300010] a[300010];  bool check(int mid)  {   for (int i=m;i<=n;i++)   {    dp[i]=dp[i-1];    if (a[i]-a[dp[i-m]+1]<=mid) dp[i]=i;   }   if (dp[n]==n) return true;   else return false;  }  int main()  {   scanf("%d%d" &n &m);   for (int i=1;i<=n;i++) scanf("%d" &a[i]);   sort(a+1 a+n+1);   int l=0 r=(a[n]-a[1]);   while (l<r)   {    int mid=(l+r)>>1;    if (check(mid)) r=mid;    else l=mid+1;   }   printf("%d\n" l);   return 0;  }  ,yes
#include<stdio.h>  #include<string.h>  #include<algorithm>  using namespace std;  int k n l r mid a[300010] i j d[300010] last;  int main(){      scanf("%d%d" &n &k);      for(i=1;i<=n;i++) scanf("%d" &a[i]);      sort(a+1 a+n+1);      l=0;r=a[n]-a[1];      while(l<r){          mid=(l+r)/2;          last=0;          for(i=k;i<=n;i++){              j=d[i-k];              if(a[i]-a[j+1]<=mid) last=i;              d[i]=last;          }          if(d[n]==n) r=mid; else l=mid+1;      }      printf("%d\n" r);  }  ,yes
#include<stdlib.h>  #include<stdio.h>  #include<math.h>  #define N 300001  #include<cstring>  #include<iostream>  #include<algorithm>  using namespace std;  int n k v[N] f[N];  int main()  {   scanf("%d%d" &n &k);   for(int i=1;i<=n;i++)     scanf("%d" &v[i]);   sort(v+1 v+n+1);   int l=0 r=v[n]-v[1];   while(l<r)     {     int mid=l+r>>1 last=0;     for(int i=k;i<=n;i++)       {       if(v[i]-v[f[i-k]+1]<=mid)last=i;       f[i]=last;    }     if(f[n]==n)r=mid;     else l=mid+1;     }   printf("%d\n" r);   return 0;  }  ,yes
#include <bits/stdc++.h>    using namespace std;    const int N = 300010;    int n  k;    int a[N]  b[N];    int main() {   ios::sync_with_stdio(false);   cin >> n >> k;   for (int i = 1;i <= n;i ++)    cin >> a[i];   sort(a + 1  a + n + 1);   int l = 0  r = a[n] - a[1]  p = 0  mid  t;   while (l <= r) {    mid = (l + r) >> 1  t = 0;    for (int i = k;i <= n;i ++) {     if (a[i] - a[b[i - k] + 1] <= mid) t =  i;     b[i] = t;    }    if (b[n] == n) p = mid  r = mid - 1;    else l = mid + 1;   }   cout << p;   return 0;  },yes
#include<cstdio>  #include<algorithm>  using namespace std;  int n m i l r mid a[333333] ans f[333333] s[333333];  bool check(){   int i j;   f[0]=s[0]=1;   for(i=1 j=0;i<=n;i++){    while(a[i]-a[j+1]>mid)j++;    int l=j r=i-m;    f[i]=0;    if(l<=r)f[i]=!!(s[r]-s[l-1]);    s[i]=s[i-1]+f[i];   }   return f[n];  }  int main(){   scanf("%d%d" &n &m);   for(i=1;i<=n;i++)scanf("%d" &a[i]);   sort(a+1 a+n+1);   l=0 r=a[n]-a[1];   while(l<=r){    mid=(l+r)>>1;    if(check())r=(ans=mid)-1;else l=mid+1;   }   printf("%d" ans);  },yes
#include<bits/stdc++.h>  using namespace std;  const int maxn = 300000 + 5;    int a[maxn]  dp[maxn];  int n  k;    bool ok_hack(int x) {   memset(dp 0 sizeof(dp));   int last=0;   for(int i=k;i<=n;i++) {    if(a[i]-a[dp[i-k]+1]<=x)last=i;    dp[i]=last;   }   return dp[n]==n;  }    int main() {   scanf("%d%d"  &n  &k);   for(int i=1;i<=n;i++)    scanf("%d" &a[i]);   sort(a+1 a+n+1);   a[0] = 0;   int l=0 r=a[n]-a[1];   while(l<r) {    int mid = r+l>>1;    if(ok_hack(mid)) r=mid;    else l=mid+1;   }   printf("%d\n"  l);   return 0;  } ,yes
#include <bits/stdc++.h> using namespace std;  const int N = 300001; int v[N]; bool ok[N]; int n  k;  bool check(int x) {  queue<int> q;  for(int i = k - 1; i < n; i++)  {   if(i == k - 1 || ok[i-k]) q.push(i-k);   while(!q.empty() && v[i] - v[q.front()+1] > x)    q.pop();   ok[i] = !q.empty();  }  return ok[n-1]; }  int main() {  scanf("%d %d"  &n  &k);  for(int i = 0; i < n; i++)  {   scanf("%d"  v + i);  }  sort(v  v + n);  int a = 0  b = 1e9+1  c;  while(a < b)  {   c = (a + b) / 2;   if(check(c)) b = c;   else a = c + 1;  }   printf("%d\n"  a); } ,yes
#include <bits/stdc++.h> using namespace std;  int main() {     int n  k; cin >> n >> k;     int a[n + 1]  f[n + 1]  g[n + 1];     for(int i = 1 ; i <= n ; i++) cin >> a[i];     sort(a + 1  a + n + 1);     int L = 0  R = 1e9;     while(L < R) {         int M = (L + R) >> 1;         f[0] = 0  g[0] = 0;         for(int i = 1 ; i <= n ; i++) {             f[i] = ((i >= k) &&                      (a[i] - a[g[i - k] + 1] <= M));             g[i] = (f[i] ? i : g[i - 1]);         }         if(f[n]) R = M;         else L = M + 1;     }     cout << L << "\n"; } ,yes
#include<bits/stdc++.h>  using namespace std;  int n k a[400000] l r mid;  bool dp[300001];  bool pd(int now){      memset(dp 0 sizeof(dp));      dp[0]=true;      int Max=1;      for(int i=k;i<=n;i++){          if(dp[i-k])Max=i-k+1;          if(a[i]-a[Max]<=now)dp[i]=true;      }      return dp[n];  }  int main(){      scanf("%d%d" &n &k);      for(int i=1;i<=n;i++)scanf("%d" &a[i]);      sort(a+1 a+n+1);      l=0; r=1e9+1000;      while(l<r){          mid=(l+r)/2;          if(pd(mid))r=mid;          else l=mid+1;      }      printf("%d\n" l);      return 0;  }  ,yes
#include <bits/stdc++.h>    using namespace std;    const int maxx = 3 * 1e5 + 20;  int a[maxx]   DP[maxx];  int n   k;    bool valid(int mid){   int last = 0;   for(int i = k ; i <= n ; i++){    if(a[i] - a[DP[i - k] + 1] <= mid){     last = i;    }    DP[i] = last;    }   return (DP[n] == n);  }    int main()  {   cin>>n>>k;   for(int i = 1 ; i <= n ; i++){    cin>>a[i];   }   sort(a+1 a+n+1);    int st = 0;   int en = a[n] - a[1];   while(st<en){    int mid = (en + st)>>1;    if(valid(mid)){     en = mid;    }    else{     st = mid + 1;     }   }   cout<<st<<endl;   },yes
#include<cstdio> #include<cstring> #include<algorithm> using namespace std; const int MAXN=300005; int v[MAXN]; int dp[MAXN]; bool check(int n int k int lim) {  for(int i=k;i<=n;i++)  {   dp[i]=dp[i-1];   if(v[i]-v[dp[i-k]+1]<=lim)    dp[i]=i;  }  return dp[n]==n; } int main() {  int n k;  scanf("%d%d" &n &k);  if(k==1)  {puts("0");return 0;}  for(int i=1;i<=n;i++)   scanf("%d" v+i);  sort(v+1 v+n+1);  int L=0 R=v[n]-v[1];  while(L<R)  {   int mid=(L+R)/2;   if(check(n k mid))    R=mid;   else    L=mid+1;  }  printf("%d\n" L);  return 0; }                                 ,yes
#include<bits/stdc++.h>  using namespace std;  const int maxn=3e5+5;  int a[maxn] dp[maxn];  int n k;  bool ok(int x){      int last=0;      for(int i=k;i<=n;i++){          int j=dp[i-k];          if(a[i]-a[j+1]<=x)  last = i;          dp[i]=last;      }      return dp[n]==n;  }  int main(){   ios::sync_with_stdio(false) cin.tie(0);   cin>>n>>k;   for(int i=1;i<=n;i++)cin>>a[i];   sort(a+1 a+1+n);   int l=-1 h=INT_MAX ans;   while(l<=h){       int mid=(l+h)/2;       if(ok(mid))    h=mid-1;       else           l=mid+1;      }      ans=h+1;   cout<<ans<<endl;   return 0;  }  ,yes
#include<bits/stdc++.h> using namespace std; const int maxn=300000+10; int a[maxn] n k dp[maxn] pos; int l=0 r=1e9 ans=-1; bool check(int li) {  memset(dp 0 sizeof(dp));  dp[0]=1;pos=0;  for(int i=k;i<=n;i++)  {   while((!dp[pos]||a[i]-a[pos+1]>li)&&pos<i) pos++;   if(i-pos>=k&&dp[pos]) dp[i]=1;  }  return dp[n]; } int main() {  scanf("%d%d" &n &k);  for(int i=1;i<=n;i++)   scanf("%d" &a[i]);  sort(a+1 a+n+1);  while(l<=r)  {   int mid=(l+r)>>1;   if(check(mid))   {    ans=mid;    r=mid-1;   }   else l=mid+1;  }  printf("%d\n" ans);  return 0; }                               ,yes
#include<cstdio>  #include<cstring>  #include<algorithm>  using namespace std;  const int MAXN=300005;  int v[MAXN];  int dp[MAXN];  bool check(int n int k int lim)  {   for(int i=k;i<=n;i++)   {    dp[i]=dp[i-1];    if(v[i]-v[dp[i-k]+1]<=lim)     dp[i]=i;   }   return dp[n]==n;  }  int main()  {   int n k;   scanf("%d%d" &n &k);   if(k==1)   {puts("0");return 0;}   for(int i=1;i<=n;i++)    scanf("%d" v+i);   sort(v+1 v+n+1);   int L=0 R=v[n]-v[1];   while(L<R)   {    int mid=(L+R)/2;    if(check(n k mid))     R=mid;    else     L=mid+1;   }   printf("%d\n" L);   return 0;  }  ,yes
#include<bits/stdc++.h>   using namespace std;  int v[300005];  bool can_be_last[300005];  int main()  {   ios::sync_with_stdio(false);   int n k;   cin>>n>>k;   for(int i=1;i<=n;i++) cin>>v[i];   sort(v+1 v+n+1);   int l=0 r=2e9;   while(l<r)   {    memset(can_be_last 0 sizeof(can_be_last));  //  cout<<"Debug "<<l<<" "<<r<<endl;    int mid=(l+r)/2;    int now=0;    can_be_last[0]=1;    for(int i=k;i<=n;i++)    {     if (can_be_last[i-k]) now=i-k+1;     if (v[i]-v[now]<=mid) can_be_last[i]=1;    }     if (can_be_last[n]) r=mid;    else l=mid+1;   }   cout<<l<<endl;   return 0;  },yes
#include<bits/stdc++.h>  using namespace std;  const int N = 300000+10;  int v[N]  dp[N];    int main() {   int n  k; cin >> n >> k;   for (int i = 1; i <= n; i ++) scanf("%d"  &v[i]);   sort(v + 1  v + n + 1);   int st = 0  en = 1e9;   while (st < en) {    int md = st + en >> 1;    dp[0] = 1;    for (int i = 1; i <= n; i ++) {     dp[i] = dp[i - 1];     int L = lower_bound(v + 1  v + n + 1  v[i] - md) - v - 1;     int R = i - k;     if (R >= L && dp[R] > (L ? dp[L - 1] : 0)) dp[i]++;    }    if (dp[n] == dp[n - 1]) st = md + 1;    else en = md;   }   cout << st << endl;   return 0;  }    ,yes
#include <bits/stdc++.h>  using namespace std;    int k n a[300069] dp[300069] now ans f l mid;  int main(){      scanf("%d%d" &n &k);      for (int i=1;i<=n;i++) scanf("%d" &a[i]);      sort(a+1 a+1+n);      f=0;      l=1e9;      ans=1e9;      while (f<=l){          mid=(f+l)/2;          memset(dp 0 sizeof(dp));          dp[0]=1;          now=0;          for (int i=k;i<=n;i++){              if (dp[i-k]){                  now=i-k+1;              }              if (a[i]-a[now]<=mid) dp[i]=1;          }          if (dp[n]) ans=min(ans mid) l=mid-1;          else f=mid+1;      }      cout<<ans;  }  ,yes
#include <iostream> #include <cstdio> #include <algorithm> using namespace std; const int N=3E5+5; const int inf=1E9; int n a[N] k l r mid p sum; bool o[N];  int main() {  //freopen("1.in" "r" stdin);  cin>>n>>k;  for (int i=1;i<=n;i++) scanf("%d" &a[i]);  sort(a+1 a+n+1);  l=0; r=inf;  while (l<r)  {   mid=(l+r)/2; sum=0; o[n]=1;    for (int i=n p=n;i;i--)   {    for (;p>=i+k-1&&a[p]-a[i]>mid;p--) sum-=o[p];    //if (mid>=20) cerr<<i<<" "<<sum<<endl;    if (i+k-1<=n) sum+=o[i+k-1];    //if (mid>=20) cerr<<i<<" "<<sum<<endl;    o[i-1]=(sum>0);   }   if (o[0]) r=mid; else l=mid+1;  }  cout<<l<<endl; } ,yes
#include <iostream> #include <cstdio> #include <algorithm> using namespace std; const int N=3E5+5; const int inf=1E9; int n a[N] k l r mid p sum; bool o[N];  int main() {  //freopen("1.in" "r" stdin);  cin>>n>>k;  for (int i=1;i<=n;i++) scanf("%d" &a[i]);  sort(a+1 a+n+1);  l=0; r=inf;  while (l<r)  {   mid=(l+r)/2; sum=0; o[n]=1;    for (int i=n p=n;i;i--)   {    for (;p>=i+k-1&&a[p]-a[i]>mid;p--) sum-=o[p];    //if (mid>=20) cerr<<i<<" "<<sum<<endl;    if (i+k-1<=n) sum+=o[i+k-1];    //if (mid>=20) cerr<<i<<" "<<sum<<endl;    o[i-1]=(sum>0);   }   if (o[0]) r=mid; else l=mid+1;  }  cout<<l<<endl; } ,yes
#include <bits/stdc++.h>  #define maxn 300010  using namespace std;  int n  k  a[maxn]  d[maxn];  bool check(int x) {      int last = 0;      for (int i = k; i <= n; ++i) {          int j = d[i-k];          if (a[i] - a[j+1] <= x) last = i;          d[i] = last;      }      return d[n] == n;  }  int main() {      scanf("%d%d"  &n  &k);      for (int i = 1; i <= n; ++i) scanf("%d"  &a[i]);      sort(a+1  a+1+n);        int l = 0  r = a[n] - a[1];      while (l < r) {          int mid = l + r >> 1;          if (check(mid)) r = mid;          else l = mid+1;      }      printf("%d\n"  l);      return 0;  }  ,yes
#include <stdio.h> #include <algorithm>  using namespace std; //--------------- int n k; int a[300100]; int v[300100]; int main() {     scanf("%d%d" &n &k);     int oo=n;     while (oo--)     {         scanf("%d" &a[n-oo]);     }     sort(a+1 a+1+n);     int left=0 right=1e9;     while (left<right)     {         int res=(left+right)>>1;         v[0]=0 v[1]=1;         for(int i=1 j=0;i<=n;i++)         {    while(a[i]-a[j+1]>res)j++;    v[i+1]=v[i]+(i>=k&&v[i-k+1]-v[j]>0);   }         if (v[n+1]>v[n]) right=res;         else left=res+1;     }     printf("%d" left);     return 0; }                           ,yes
#include<cstdio>  #include<algorithm>  using namespace std;  inline int read()  {   int x;char c;   while((c=getchar())<'0'||c>'9');   for(x=c-'0';(c=getchar())>='0'&&c<='9';)x=x*10+c-'0';   return x;  }  #define MN 300000  int a[MN+5] s[MN+5];  int main()  {   int n k i j l r mid ans;   n=read();k=read();   for(i=1;i<=n;++i)a[i]=read();   sort(a+1 a+n+1);   for(l=0 r=1e9;l<=r;)   {    mid=l+r>>1;    for(i=s[0]=1;i<=n;++i)    {     j=lower_bound(a+1 a+n+1 a[i]-mid)-a;     if(j-1<=i-k)s[i]=s[i-1]+(s[i-k]>s[j-2]);else s[i]=s[i-1];    }    if(s[n]>s[n-1])ans=mid r=mid-1;else l=mid+1;   }   printf("%d" ans);  },yes
#include <bits/stdc++.h>  using namespace std;  const int N = 3e5 + 5;  int a[N]  f[N];  int main() {   int n  k;   scanf("%d%d"  &n  &k);   int l = 0  r = 1e9  ans = 1e9;   for (int i = 1; i <= n; ++ i) scanf("%d"  &a[i]);   sort(a + 1  a + 1 + n);   while (l <= r) {    int mid = (l + r) / 2;    f[0] = 1;    int ql = 0  qr = 0  s = 0;    for (int i = 1; i <= n; ++ i) {     while (qr <= i - k) s += f[qr ++];     while (a[i] - a[ql + 1] > mid) s -= f[ql ++];     f[i] = (ql < qr && s > 0);    }    if (f[n]) {     ans = mid;     r = mid - 1;    }    else {     l = mid + 1;    }   }   printf("%d\n"  ans);  }    ,yes
#include <bits/stdc++.h>    using namespace std;  const int N = 3E5 + 7;  int n  k  a[N]  dp[N];  bool judge(int key)  {      int pre = 0;      for(int i = k;i <= n;i ++) {          int j = dp[i - k] + 1;          if(a[i] - a[j] <= key) pre = i;          dp[i] = pre;      }      return dp[n] == n;  }  int main()  {      scanf("%d%d" &n &k);      for(int i = 1;i <= n;i ++) scanf("%d" &a[i]);      sort(a + 1  a + 1 + n);      int l = 0  r = a[n] - a[1];      while(l <= r) {          int m = (l + r) / 2;          if(judge(m)) r = m - 1;          else l = m + 1;      }      printf("%d\n"  l);      return 0;  }  ,yes
#include <bits/stdc++.h>  #define N 300300  using namespace std;  int a[N]  b[N]  n  k;  int main()  {      cin >> n >> k;      for(int i = 1; i <= n; i ++)          scanf("%d"  a + i);      sort(a + 1  a + n + 1);      int low = 0  high = a[n] - a[1];      while(high - low >= 0)      {          int mid = (low + high) >> 1  foo = 0;          for(int i = k; i <= n; i ++)          {              if(a[i] - a[b[i - k] + 1] <= mid)                  foo = i;              b[i] = foo;          }          if(b[n] == n)              high = mid - 1;          else              low = mid + 1;      }      cout << low;  }  ,yes
#include <bits/stdc++.h>    using namespace std;    const int maxn = 300000 + 5;    int v[maxn];  int dp[maxn];  int n  k;    bool can(int x) {      for (int i = k; i <= n; i++) {          if (v[i] - v[dp[i - k]+1] <= x) dp[i] = i;          else dp[i] = dp[i - 1];       }      return dp[n] == n;  }    int main() {      scanf("%d%d"  &n  &k);      for (int i = 1; i <= n; i++) scanf("%d"  &v[i]);      sort(v + 1  v + n + 1);      int L = 0  R = v[n] - v[1];      while (L < R) {          int mid = (L + R) / 2;          if (can(mid)) R = mid;          else L = mid + 1;      }      printf("%d\n"  L);      return 0;  }  ,yes
#include<bits/stdc++.h>  using namespace std;  int n k a[400000] l r mid;  bool dp[300001];  bool check(int now)  {      memset(dp 0 sizeof(dp));      dp[0]=true;      int Max=1;      for(int i=k;i<=n;i++){          if(dp[i-k])Max=i-k+1;          if(a[i]-a[Max]<=now)dp[i]=true;      }      return dp[n];  }  int main()  {      scanf("%d%d" &n &k);      for(int i=1;i<=n;i++)          scanf("%d" &a[i]);      sort(a+1 a+n+1);      l=0; r=1e9+1000;      while(l<r)      {          mid=(l+r)/2;          if(check(mid))              r=mid;          else              l=mid+1;      }      printf("%d\n" l);      return 0;  }  ,yes
#include<algorithm>  #include<iostream>  #include<cstring>  using namespace std;  const int maxn = (int)3e5 + 7;  int n  k;  int v[maxn];  int dp[maxn];    bool check(int mid) {   memset(dp  0  sizeof(dp));   int mx = 0;   for (int i = k; i <= n; ++i) {    if (v[i] - v[dp[i - k]+1] <= mid) mx = i;    dp[i] = mx;   }   return dp[n] == n;  }    int main() {   ios::sync_with_stdio(false);   cin >> n >> k;   for (int i = 1; i <= n; ++i) cin >> v[i];   sort(v+1  v+1 + n);   int l = 0  r = v[n] - v[1];   while (l < r) {    int mid = (l + r) / 2;    if (check(mid)) r = mid;    else l = mid+1;   }   cout << l;   return 0;  },yes
#include<bits/stdc++.h>  using namespace std;  const int maxn = 3e5 + 5;  int a[maxn]  f[maxn]{0};//    int main()  {      int n  k;      scanf("%d%d"  &n  &k);      for(int i = 1; i <= n; ++i) scanf("%d"  &a[i]);      sort(a + 1  a + 1 + n);      int l = -1  r = a[n] - a[1];      while(l + 1 < r)      {          int mid = (l + r) >> 1;          int pos = 0  t;          for(int i = k; i <= n; ++i)          {              t = f[i - k];              if(a[i] - a[t + 1] <= mid) pos = i;              f[i] = pos;          }          if(f[n] == n) r = mid;          else l = mid;      }      printf("%d\n"  r);      return 0;  },yes
#include <bits/stdc++.h>    using namespace std;    const int maxn = 300000 + 5;    int v[maxn];  int dp[maxn];  int n  k;    bool can(int x) {      int last = 0;      for (int i = k; i <= n; i++) {          if (v[i] - v[dp[i - k]+1] <= x) last = i;          dp[i] = last;       }      return dp[n] == n;  }    int main() {      scanf("%d%d"  &n  &k);      for (int i = 1; i <= n; i++) scanf("%d"  &v[i]);      sort(v + 1  v + n + 1);      int L = 0  R = v[n] - v[1];      while (L < R) {          int mid = (L + R) / 2;          if (can(mid)) R = mid;          else L = mid + 1;      }      printf("%d\n"  L);      return 0;  }  ,yes
#include <stdio.h>  #include <algorithm>  #include <stdlib.h>  #define MAX 500000  using namespace std;  int v[MAX] f[MAX] n k;  bool check(long long x){    int c = 0 i = 0;    for (int i = k; i <= n; i++){      f[i] = f[i - 1];      if (v[i] - v[f[i-k]+1] <= x) f[i] = i;    }    return (f[n] == n);  }  int main(){    scanf("%d%d" &n &k);    for (int i = 1; i <= n; i++) scanf("%d" &v[i]);    sort(v+1 v+n+1);    long long l = 0  r = 1000000000000000000;    while (l < r){      long long mid = (l+r)/2;      //printf("%llu\n" mid);      if (check(mid)) r = mid;      else l = mid + 1;    }    printf("%llu" l);    return 0;  }  ,yes
#include <stdio.h>  #include <algorithm>  #include <stdlib.h>  #define MAX 500000  using namespace std;  int v[MAX] f[MAX] n k;  bool check(long long x){    int c = 0 i = 0;    for (int i = k; i <= n; i++){      f[i] = f[i - 1];      if (v[i] - v[f[i-k]+1] <= x) f[i] = i;    }    return (f[n] == n);  }  int main(){    scanf("%d%d" &n &k);    for (int i = 1; i <= n; i++) scanf("%d" &v[i]);    sort(v+1 v+n+1);    long long l = 0  r = 1000000000000000000;    while (l < r){      long long mid = (l+r)/2;      //printf("%llu\n" mid);      if (check(mid)) r = mid;      else l = mid + 1;    }    printf("%llu" l);    return 0;  }  ,yes
#include<iostream>  #include<cstdio>  #include<cstring>  #include<algorithm>  using namespace std;  int n k a[300010] l r s[300010];  int check(int x)  {   memset(s 0 sizeof(s));    s[0]=1;s[1]=-1;   int now=1;   for(int i=0;i<=n;i++)   {    if(i)    s[i]+=s[i-1];    if(s[i])    {     while(now<n&&a[now+1]-a[i+1]<=x) now++;     if(i+k<now+1) s[i+k]++ s[now+1]--;    }   }    return s[n];  }   int main()  {   scanf("%d%d" &n &k);   for(int i=1;i<=n;i++)   scanf("%d" &a[i]);   sort(a+1 a+n+1);    int r=1e9+7 l=0;   while(l<=r)   {    int mid=(l+r)>>1;    if(check(mid))    r=mid-1;    else l=mid+1;    }   printf("%d" r+1);   },yes
#include <bits/stdc++.h> using namespace std; #define f(i  x  n) for (int i = x; i < (int)(n); ++i) #define ll long long  int x[300001]  n  k;  bool ok(int m){  int l = 1;  deque<int> q;  q.push_front(0);  f(i  1  n + 1){   while (x[i] - x[l] > m){    ++l;    while (!q.empty() && q.back() + 1 < l)q.pop_back();   }   if (!q.empty() && i - q.back() >= k)q.push_front(i);  }  return !q.empty() && q.front() == n; }  int main(){  scanf("%d%d"  &n  &k);  f(i  1  n + 1)scanf("%d"  x + i);  sort(x + 1  x + n + 1);  int l = 0  r = 1e9;  while (r > l){   int m = l + r >> 1;   if (ok(m))r = m;   else l = m + 1;  }  printf("%d\n"  l); } ,yes
#include <bits/stdc++.h>  using namespace std;    const int maxn = 3e5+10;    int a[maxn];  int dp[maxn];  int n k;  bool check(int mid){      int last = 0;      for(int i=k ; i<=n ; ++i){          int j = dp[i-k];          if(a[i]-a[j+1]<=mid)last = i;          dp[i] =last;      }      return dp[n] ==n;  }    int main(int argc  char const *argv[]) {      cin>>n>>k;      for(int i=1;  i<=n ; ++i)scanf("%d" &a[i] );      sort(a+1 a+n+1);      int l =-1 r = 1e9+10;      while (l<=r) {          int mid = (l+r)>>1;          if(check(mid))r = mid-1;          else l = mid+1;      }      std::cout << r+1 << '\n';      return 0;  }  ,yes
#include <bits/stdc++.h> using namespace std;  const int maxn = 3e5+10;  int a[maxn]; int dp[maxn]; int n k; bool check(int mid){     int last = 0;     for(int i=k ; i<=n ; ++i){         int j = dp[i-k];         if(a[i]-a[j+1]<=mid)last = i;         dp[i] =last;     }     return dp[n] ==n; }  int main(int argc  char const *argv[]) {     cin>>n>>k;     for(int i=1;  i<=n ; ++i)scanf("%d" &a[i] );     sort(a+1 a+n+1);     int l =-1 r = 1e9+10;     while (l<=r) {         int mid = (l+r)>>1;         if(check(mid))r = mid-1;         else l = mid+1;     }     std::cout << r+1 << '\n';     return 0; }                                ,yes
#include<bits/stdc++.h>  using namespace std;  const int MXN = 3e5 + 10;  int n  k  l = -1  r = 1e9  mid  A[MXN]  P[MXN];  int Solve(int s)  {   int t = 0;   for (int i = k; i <= n; i++)      {    t = P[i - k] + 1;    P[i] = P[i - 1];    if(A[i] - A[t] <= s)     P[i] = i;   }   return (P[n] == n);  }  int main()  {      scanf("%d%d"  &n  &k);      for (int i = 1; i <= n; i++)          scanf("%d"  &A[i]);      sort(A + 1  A + n + 1);      while (r - l > 1)      {          mid = (l + r) / 2;          if (Solve(mid) == 1)              r = mid;          else              l = mid;      }      printf("%d"  r);      return (0);  }  ,yes
#include<iostream>  #include<cstdio>  #include<cstring>  #include<algorithm>  using namespace std;  int n k a[300010] l r s[300010];  int check(int x)  {   memset(s 0 sizeof(s));    s[0]=1;s[1]=-1;   int now=1;   for(int i=0;i<=n;i++)   {    if(i)    s[i]+=s[i-1];    if(s[i])    {     while(now<n&&a[now+1]-a[i+1]<=x) now++;     if(i+k<now+1) s[i+k]++ s[now+1]--;    }   }    return s[n];  }   int main()  {   scanf("%d%d" &n &k);   for(int i=1;i<=n;i++)   scanf("%d" &a[i]);   sort(a+1 a+n+1);    int r=1e9+7 l=0;   while(l<=r)   {    int mid=(l+r)>>1;    if(check(mid))    r=mid-1;    else l=mid+1;    }   printf("%d" r+1);   }    ,yes
#include <bits/stdc++.h>  using namespace std;    const int maxn = 3e5+10;    int a[maxn];  int dp[maxn];  int n k;  bool check(int mid){      int last = 0;      for(int i=k ; i<=n ; ++i){          int j = dp[i-k];          if(a[i]-a[j+1]<=mid)last = i;          dp[i] =last;      }      return dp[n] ==n;  }    int main(int argc  char const *argv[]) {      cin>>n>>k;      for(int i=1;  i<=n ; ++i)scanf("%d" &a[i] );      sort(a+1 a+n+1);      int l =-1 r = 1e9+10;      while (l<=r) {          int mid = (l+r)>>1;          if(check(mid))r = mid-1;          else l = mid+1;      }      std::cout << r+1 << '\n';      return 0;  }    ,yes
#include<cstdio>  #include<algorithm>  using namespace std;  int n a[200010] y=1;  int main()  {   scanf("%d" &n);   for(int i=1;i<=n;++i)scanf("%d" a+i);   for(int i=2;i<=n;++i)y=max(y abs(a[i]-a[i-1]));   for(int i=2;i<=n;++i){    if(y!=1&&(a[i-1]+1==a[i]||a[i-1]-1==a[i])){if((a[i-1]-1)/y!=(a[i]-1)/y)puts("NO") exit(0);}    else if(a[i-1]+y!=a[i]&&a[i-1]-y!=a[i])puts("NO") exit(0);   }   printf("YES\n1000000000 %d\n" y);   return 0;  },no
#include<cstdio>  #include<algorithm>  using namespace std;  int n a[200010] y=1;  int main()  {   scanf("%d" &n);   for(int i=1;i<=n;++i)scanf("%d" a+i);   for(int i=2;i<=n;++i)y=max(y abs(a[i]-a[i-1]));   for(int i=2;i<=n;++i){    if(y!=1&&(a[i-1]+1==a[i]||a[i-1]-1==a[i])){if((a[i-1]-1)/y!=(a[i]-1)/y)puts("NO") exit(0);}    else if(a[i-1]+y!=a[i]&&a[i-1]-y!=a[i])puts("NO") exit(0);   }   printf("YES\n1000000000 %d\n" y);   return 0;  },no
#include<cstdio>  #include<algorithm>  using namespace std;  int n a[200010] y=1;  int main()  {   scanf("%d" &n);   for(int i=1;i<=n;++i)scanf("%d" a+i);   for(int i=2;i<=n;++i)y=max(y abs(a[i]-a[i-1]));   for(int i=2;i<=n;++i){    if(y!=1&&(a[i-1]+1==a[i]||a[i-1]-1==a[i])){if((a[i-1]-1)/y!=(a[i]-1)/y)puts("NO") exit(0);}    else if(a[i-1]+y!=a[i]&&a[i-1]-y!=a[i])puts("NO") exit(0);   }   printf("YES\n1000000000 %d\n" y);   return 0;  },no
#include <cstdio>  #include <algorithm>  using namespace std;  int n a[200010] y=1;  int main()  {   scanf("%d" &n);   for(int i=1;i<=n;++i) scanf("%d" a+i);   for(int i=2;i<=n;++i) y=max(y abs(a[i]-a[i-1]));   for(int i=2;i<=n;++i)   {    if(y!=1 && (a[i-1]+1==a[i]||a[i-1]-1==a[i])) {if((a[i-1]-1)/y!=(a[i]-1)/y) puts("NO") exit(0);}    else if(a[i-1]+y!=a[i]&&a[i-1]-y!=a[i]) puts("NO") exit(0);   }   printf("YES\n1000000000 %d\n" y);   return 0;  },no
#include <cstdio>  #include <algorithm>  using namespace std;  int n a[200010] y=1;  int main()  {   scanf("%d" &n);   for(int i=1;i<=n;++i) scanf("%d" a+i);   for(int i=2;i<=n;++i) y=max(y abs(a[i]-a[i-1]));   for(int i=2;i<=n;++i)   {    if(y!=1 && (a[i-1]+1==a[i]||a[i-1]-1==a[i])) {if((a[i-1]-1)/y!=(a[i]-1)/y) puts("NO") exit(0);}    else if(a[i-1]+y!=a[i]&&a[i-1]-y!=a[i]) puts("NO") exit(0);   }   printf("YES\n1000000000 %d\n" y);   return 0;  },no
#include <cstdio>  #include <algorithm>  using namespace std;  int n a[200010] y=1;  int main()  {   scanf("%d" &n);   for(int i=1;i<=n;++i) scanf("%d" a+i);   for(int i=2;i<=n;++i) y=max(y abs(a[i]-a[i-1]));   for(int i=2;i<=n;++i)   {    if(y!=1 && (a[i-1]+1==a[i]||a[i-1]-1==a[i])) {if((a[i-1]-1)/y!=(a[i]-1)/y) puts("NO") exit(0);}    else if(a[i-1]+y!=a[i]&&a[i-1]-y!=a[i]) puts("NO") exit(0);   }   printf("YES\n1000000000 %d\n" y);   return 0;  },no
#include <cstdio>  #include <algorithm>  using namespace std;  int n a[200010] y=1;  int main()  {   scanf("%d" &n);   for(int i=1;i<=n;++i) scanf("%d" a+i);   for(int i=2;i<=n;++i) y=max(y abs(a[i]-a[i-1]));   for(int i=2;i<=n;++i)   {    if(y!=1 && (a[i-1]+1==a[i]||a[i-1]-1==a[i])) {if((a[i-1]-1)/y!=(a[i]-1)/y) puts("NO") exit(0);}    else if(a[i-1]+y!=a[i]&&a[i-1]-y!=a[i]) puts("NO") exit(0);   }   printf("YES\n1000000000 %d\n" y);   return 0;  },no
#include "bits/stdc++.h"  using namespace std;  int n  a[200005]  mx=1;  int main(){    scanf("%d"  &n);    for(int i = 1; i <= n; i++)scanf("%d"  a + i);    for(int i = 2; i <= n; i++)mx = max(mx abs(a[i]-a[i-1]));    for(int i = 2; i <= n; i++){      if(mx != 1 && (a[i-1]+1 == a[i] || a[i-1]-1 == a[i])){if((a[i-1]-1)/mx!=(a[i]-1)/mx)return puts("NO");}      else if(abs(a[i-1] - a[i]) != mx )return puts("NO");    }    puts("YES");    cout << 1000000000 << ' ' << mx << '\n';    return 0;  },no
#include "bits/stdc++.h"  using namespace std;  int n  a[200005]  mx=1;  int main(){    scanf("%d"  &n);    for(int i = 1; i <= n; i++)scanf("%d"  a + i);    for(int i = 2; i <= n; i++)mx = max(mx abs(a[i]-a[i-1]));    for(int i = 2; i <= n; i++){      if(mx != 1 && (a[i-1]+1 == a[i] || a[i-1]-1 == a[i])){if((a[i-1]-1)/mx!=(a[i]-1)/mx)return puts("NO");}      else if(a[i-1]+mx != a[i] && a[i-1]-mx!=a[i])return puts("NO");    }    puts("YES");    cout << 1000000000 << ' ' << mx << '\n';    return 0;  },no
#include "bits/stdc++.h"  using namespace std;  int n  a[200005]  mx=1;  int main(){    scanf("%d"  &n);    for(int i = 1; i <= n; i++)scanf("%d"  a + i);    for(int i = 2; i <= n; i++)mx = max(mx abs(a[i]-a[i-1]));    for(int i = 2; i <= n; i++){      if(mx != 1 && (a[i-1]+1 == a[i] || a[i-1]-1 == a[i])){if((a[i-1]-1)/mx!=(a[i]-1)/mx)return puts("NO");}      else if(a[i-1]+mx != a[i] && a[i-1]-mx!=a[i])return puts("NO");    }    puts("YES");    cout << 1000000000 << ' ' << mx << '\n';    return 0;  },no
#include "bits/stdc++.h"  using namespace std;  int n  a[200005]  mx=1;  int main(){    scanf("%d"  &n);    for(int i = 1; i <= n; i++)scanf("%d"  a + i);    for(int i = 2; i <= n; i++)mx = max(mx abs(a[i]-a[i-1]));    for(int i = 2; i <= n; i++){      if(mx != 1 && (a[i-1]+1 == a[i] || a[i-1]-1 == a[i])){if((a[i-1]-1)/mx!=(a[i]-1)/mx)return puts("NO");}      else if(a[i-1]+mx != a[i] && a[i-1]-mx!=a[i])return puts("NO");    }    puts("YES");    cout << 1000000000 << ' ' << mx << '\n';    return 0;  },no
#include "bits/stdc++.h"  using namespace std;  int n  a[200005]  mx=1;  int main(){    scanf("%d"  &n);    for(int i = 1; i <= n; i++)scanf("%d"  a + i);    for(int i = 2; i <= n; i++)mx = max(mx abs(a[i]-a[i-1]));    for(int i = 2; i <= n; i++){      if(mx != 1 && (a[i-1]+1 == a[i] || a[i-1]-1 == a[i])){if((a[i-1]-1)/mx!=(a[i]-1)/mx)return puts("NO");}      else if(a[i-1]+mx != a[i] && a[i-1]-mx!=a[i])return puts("NO");    }    puts("YES");    cout << 1000000000 << ' ' << mx << '\n';    return 0;  }  ,no
#include<bits/stdc++.h>  #define maxn 200010  using namespace std;    int val[maxn] n y;  int main(){   scanf("%d" &n);   for(int i=1;i<=n;i++)    scanf("%d" &val[i]);   for(int i=2;i<=n;i++){    if(abs(val[i-1]-val[i])==1)     continue;    y=abs(val[i-1]-val[i]);   }   if(!y)    y=1;   for(int i=2;i<=n;i++){    if((abs(val[i-1]-val[i])!=1&&y!=abs(val[i-1]-val[i]))||(y!=1&&abs(val[i-1]-val[i])==1&&min(val[i-1] val[i])%y==0)){     puts("NO");     return 0;    }   }   printf("YES\n1000000000 %d\n" y);   return 0;  }  ,no
#include <cstdio>  #include <algorithm>  #include<iostream>  using namespace std;  int n a[200010] y=1;  int main()  {      scanf("%d" &n);      for(int i=1;i<=n;++i) scanf("%d" &a[i]);      for(int i=2;i<=n;++i) y=max(y abs(a[i]-a[i-1]));      for(int i=2;i<=n;++i)      {          if(y!=1 && (abs(a[i]-a[i-1])==1)) {              if((a[i-1]-1)/y!=(a[i]-1)/y) puts("NO") exit(0);          }          else if(abs(a[i]-a[i-1])!=y)              puts("NO") exit(0);      }      cout<<"YES"<<endl<<1000000000<<' '<<y<<endl;        return 0;  },no
#include<bits/stdc++.h>  using namespace std;  int i j k l n;  int a[3000005];  main(){  cin>>n; k=1; l=-1000000001; k=-1;  for(i=1; i<=n; i++) {cin>>a[i]; l=max(l a[i]);}  for(i=1; i<n; i++) if (abs(a[i]-a[i+1])!=1){ k=abs(a[i+1]-a[i]); break;}  if (k==-1) {cout<<"YES"<<endl; cout<<1000000000<<' '<<l; exit(0);}  if (k==0){cout<<"NO"; exit(0);}  for(i=1; i<n; i++)  if (abs(a[i]-a[i+1])!=1 && abs(a[i]-a[i+1])!=k || a[i]%k==0 && a[i+1]==a[i]+1 || (a[i]-1)%k==0 && a[i+1]==a[i]-1) {cout<<"NO"; exit(0);}  cout<<"YES"<<endl;  cout<<1000000000<<' '<<k;  }  ,no
#include<bits/stdc++.h>  using namespace std;  int main(){  long n i j=1;  cin>>n;  long a[n+1];  cin>>a[1];  for(i=2;i<=n;i++){      cin>>a[i];      if(j==1&&abs(a[i]-a[i-1])>1){       j=abs(a[i]-a[i-1]);      }     else  if(j!=1&&abs(a[i]-a[i-1])!=j&&abs(a[i]-a[i-1])>1){          cout<<"NO";          return 0;      }  }  double r;  r=j;    for(i=1;i<n;i++){      if((abs(a[i]-a[i+1])==1&&ceil(a[i]/r)!=ceil(a[i+1]/r)&&j!=1)||a[i]==a[i+1]){          cout<<"NO";          return 0;      }  }    cout<<"YES"<<endl;  cout<<1000000000<<" "<<j;  return 0;  }    ,no
#include <bits/stdc++.h>    using namespace std;  long long n2  m;  long long t[200005];  int  main()  {    long long n ;  cin >> n;  for (long long i = 0 ;i< n; i++){       cin >> t[i];  }  m=1 ;  for (long long i = 0 ;i<n-1;i++){              m = max (m abs(t[i]-t[i+1]));  }  n2 =1000000000;  for (long long i= 0 ;i< n-1 ;i++){    if (abs(t[i]-t[i+1])!=m&&abs(t[i]-t[i+1])!=1|| (t[i]%m==0&&t[i+1]-t[i]==1&& m!=1)||( t[i]%m==1&&t[i+1]-t[i]==-1&& m!=1)){      cout <<"NO"<<endl;      return 0 ;    }  }  cout <<"YES"<<endl;  cout <<n2<<" "<<m<<endl;      return 0;  }  ,no
#include<bits/stdc++.h>  using namespace std;  const int maxn=200011;  int main(){   int n; scanf("%d" &n); static int a[maxn];   for (int i=1;i<=n;++i) scanf("%d" a+i);   int tmp=0;   for (int i=2;i<=n;++i) if (abs(a[i]-a[i-1])!=1){    if (a[i]==a[i-1]) {puts("NO"); exit(0);}        if (!tmp) tmp=abs(a[i]-a[i-1]);    else if (tmp!=abs(a[i]-a[i-1])){puts("NO"); exit(0);}       }   if (!tmp) tmp=1000000000;   for (int i=2;i<=n;++i) if (abs(a[i]-a[i-1])==1)    if ((a[i]-1)/tmp!=(a[i-1]-1)/tmp){puts("NO"); exit(0);}   puts("YES");   printf("%d %d\n" 1000000000 tmp);  },no
#include<bits/stdc++.h>  using namespace std;  int n a[200005] ok=1 y;  int main(){   scanf("%d" &n);   for (int i=1;i<=n;i++) scanf("%d" &a[i]);   for (int i=1;i<n;i++) if (abs(a[i+1]-a[i])==0) ok=0;   for (int i=1;i<n;i++) if (abs(a[i+1]-a[i])!=1){    if (!y) y=abs(a[i+1]-a[i]);    else{     if (abs(a[i+1]-a[i])!=y) ok=0;    }   }   if (!y) y=1;   for (int i=1;i<n;i++){    int xx=(a[i]-1)/y+1 yy=(a[i]-1)%y+1;    int xxx=(a[i+1]-1)/y+1 yyy=(a[i+1]-1)%y+1;    if (abs(xx-xxx)+abs(yy-yyy)!=1) ok=0;   }   if (!ok) printf("NO");   else printf("YES\n1000000000 %d" y);  },no
#include<bits/stdc++.h>  using namespace std;    int n a[202222] y = 1;    int main(){      cin >> n;      for(int i = 0;i < n;++i) scanf("%d" &a[i]);      for(int i = 1;i < n;++i){          int tmp = abs(a[i]-a[i-1]);          if(!tmp) return 0*puts("NO");          else if(tmp > 1){              if(y == 1) y = tmp;              else if(y != tmp) return 0*puts("NO");          }      }      for(int i = 1;i < n && y > 1;++i)          if(abs(a[i]-a[i-1]) == 1 && min(a[i] a[i-1]) % y == 0) return 0*puts("NO");      printf("YES\n%d %d" 1000000000 y);        return 0;  }  ,no
#include <cstdio>  #include <algorithm>  using namespace std;  int n a[200010] y=1;  int main()  {      scanf("%d" &n);      for(int i=1; i<=n; ++i)          scanf("%d" a+i);      for(int i=2; i<=n; ++i)          y=max(y abs(a[i]-a[i-1]));      for(int i=2; i<=n; ++i)      {          if(y!=1 && (a[i-1]+1==a[i]||a[i-1]-1==a[i]))          {              if((a[i-1]-1)/y!=(a[i]-1)/y)                  puts("NO") exit(0);          }          else if(a[i-1]+y!=a[i]&&a[i-1]-y!=a[i])              puts("NO") exit(0);      }      printf("YES\n1000000000 %d\n" y);      return 0;  }  ,no
#include<bits/stdc++.h> using namespace std; const int N = 2e5+2  inf = 1e9; int A[N]  n  d; int main(){     scanf("%d"  &n);     for(int i=0;i<n;i++) scanf("%d"  A+i);     for(int i=0;i<n-1;i++){         if(A[i]==A[i+1]) return !printf("NO");         if(abs(A[i]-A[i+1])>1) d = abs(A[i]-A[i+1]);     }     if(!d) return !printf("YES\n%d %d"  inf  1);     for(int i=0;i<n-1;i++){         if(abs(A[i]-A[i+1])!=1 && abs(A[i]-A[i+1])!=d) return !printf("NO");         if(abs(A[i]-A[i+1])==1 && (A[i]-1)/d!=(A[i+1]-1)/d) return !printf("NO");     }     printf("YES\n%d %d"  inf  d); } ,no
#include<bits/stdc++.h>  using namespace std;    set<int> s;  int an[200000+7];  int main()  {   int n;   cin>>n;   cin>>an[0];   for(int i=1;i<n;i++){    cin>>an[i];    if(abs(an[i]-an[i-1])!=1) s.insert(abs(an[i]-an[i-1]));    if(s.size()>=2  || an[i]==an[i-1]){     cout<<"NO"<<endl;     return 0;    }   }   int x=0 y=1;   if(s.size()!=0) y=*s.begin();   for(int i=1;i<n;i++) {    if(y!=1 && (an[i]-an[i-1]==1&&an[i-1]%y==0 || an[i-1]-an[i]==1&&an[i]%y==0)) {     cout<<"NO"<<endl;     return 0;    }   }   cout<<"YES"<<endl;   cout<<1000000000<<" "<<y<<endl;   return 0;  }   ,no
#include<cstdio>  #include<set>  #include<algorithm>  #define int long long  using namespace std;  int n a[500001];  signed main()  {   scanf("%lld" &n);   for(int i=0;i<n;i++)scanf("%lld" a+i);   set<int> s;   for(int i=1;i<n;i++)s.insert(abs(a[i]-a[i-1]));   s.erase(1);   if(s.size()>1||(!s.empty()&&!*s.begin())){puts("NO");return 0;}   if(s.empty()){puts("YES\n1000000000 1");return 0;}   int y=*s.begin();   for(int i=1;i<n;i++)    if(abs(a[i]-a[i-1])==1&&max(a[i] a[i-1])%y==1&&min(a[i] a[i-1])%y==0){puts("NO");return 0;}   printf("YES\n1000000000 %lld\n" y);   return 0;  },no
#include <bits/stdc++.h>    using namespace std;  long long x  y;  long long t[200005];  int  main()  {    long long n ;  cin >> n;  for (long long i = 0 ;i< n; i++){       scanf("%I64d"  t+i);  }  y=1 ;  for (long long i = 0 ;i<n-1;i++){   if(y<abs(t[i]-t[i+1]))              y = abs(t[i]-t[i+1]);  }  x =1000000000;  for (long long i= 0 ;i< n-1 ;i++){    if (abs(t[i]-t[i+1])!=y&&abs(t[i]-t[i+1])!=1|| (t[i]%y==0&&t[i+1]-t[i]==1&& y!=1)||( t[i]%y==1&&t[i+1]-t[i]==-1&& y!=1)){      cout <<"NO\n";      return 0 ;    }  }  cout <<"YES\n";  cout <<x<<" "<<y<<endl;      return 0;  }  ,no
#include <stdio.h>  int abs(int x){ return x>0?x:-x;}  const int N=200050;  int a[N];  int max(int a  int b){ return a>b?a:b;}  int main()  {   int n i y=1 x=1000000000;   scanf("%i" &n);   for(i=1;i<=n;i++) scanf("%i" &a[i]);   for(i=1;i<n;i++) y=max(y abs(a[i]-a[i+1]));   for(i=1;i<n;i++)   {    if(abs(a[i]-a[i+1])!=y && abs(a[i]-a[i+1])!=1) return printf("NO\n") 0;    if(abs(a[i]-a[i+1])!=y)    {     if(a[i]%y==1 && a[i+1]<a[i]) return printf("NO\n") 0;     if(a[i]%y==0 && a[i]<a[i+1]) return printf("NO\n") 0;    }   }   printf("YES\n");   printf("%i %i\n" x y);   return 0;  },no
#include<bits/stdc++.h> using namespace std; const int N = 2e5+5  inf = 1e9; int A[N]  n  a  d  b; int main(){     scanf("%d"  &n);     for(int i=0;i<n;i++) scanf("%d"  A+i);     for(int i=0;i<n-1;i++){         if(A[i]==A[i+1]) return !printf("NO");         if(abs(A[i]-A[i+1])>1) d = abs(A[i]-A[i+1]);     }     if(!d) return !printf("YES\n%d %d"  inf  1);     for(int i=0;i<n-1;i++){         if(abs(A[i]-A[i+1])!=1 && abs(A[i]-A[i+1])!=d) return !printf("NO");         if(abs(A[i]-A[i+1])==1 && (A[i]-1)/d!=(A[i+1]-1)/d) return !printf("NO");     }     printf("YES\n%d %d"  inf  d); } ,no
#include<bits/stdc++.h>  using namespace std;  const int inf=1e9;  int n a[200005] ans;  int main()  {   ans=inf;   cin>>n;   for (int i=1;i<=n;++i)    cin>>a[i];   for (int i=1;i<n;++i)    if (abs(a[i]-a[i+1])>1)    {     if (ans!=inf&&ans!=abs(a[i]-a[i+1]))     {      puts("NO");         return 0;     }     ans=abs(a[i]-a[i+1]);    }    else     {     if (a[i]==a[i+1])     {      puts("NO");       return 0;     }    }   for (int i=1;i<n;++i)    if (abs(a[i]-a[i+1])==1&&(a[i]-1)/ans!=(a[i+1]-1)/ans)    {     puts("NO");      return 0;    }   puts("YES");   cout<<"1000000000 "<<ans;  }  ,no
#include <bits/stdc++.h> using namespace std; #define ll long long #define f(i  x  n) for (int i = x; i < (int)(n); ++i)  int const N = 200000; int x[N];  void no() { printf("NO\n"); exit(0); }  int main(){  int n = 1e9  m = -1;  int q;  scanf("%d"  &q);  f(i  0  q)scanf("%d"  x + i);  f(i  1  q){   int t = abs(x[i] - x[i - 1]);   if (t == 0)no();   if (t == 1)continue;   if (m == -1)m = t;   else if (m != t)no();  }  if (m == -1)m = 1e9;  f(i  1  q){   int t = abs(x[i] - x[i - 1]);   if (t != 1)continue;   if ((x[i] - 1) / m != (x[i - 1] - 1) / m)no();  }  printf("YES\n%d %d\n"  n  m); },no
#include<bits/stdc++.h>  using namespace std;    const int N=200050;  int n a[N] x y=0;    int main(){   scanf("%d" &n);   for(int i=1;i<=n;i++)scanf("%d" &a[i]);   for(int i=2;i<=n;i++){    if(a[i]==a[i-1]){     puts("NO");return 0;    }    if(abs(a[i]-a[i-1])==1)continue;    if(y>0 && abs(a[i]-a[i-1])!=y){     puts("NO");return 0;    }    y=abs(a[i]-a[i-1]);   }   if(y!=0)   for(int i=2;i<=n;i++){    if(abs(a[i]-a[i-1])==1 && min(a[i] a[i-1])%y==0){     puts("NO");return 0;    }   }   puts("YES");   if(y==0)puts("1000000000 1000000000");   else printf("1000000000 %d\n" y);   return 0;  },no
#include <bits/stdc++.h> using namespace std; int main() { int n; cin>>n; int ar[n+2]; for(int i=1;i<=n;i++) cin>>ar[i]; int mini=1;int f=0;int i;int maxi=0; for(i=1;i<n;i++) { mini=abs(ar[i+1]-ar[i]); maxi=max(maxi ar[i]); if(mini==0) {f=1;cout<<"NO"<<endl;return 0;} if(mini>1) break; } //cout<<mini<<" "<<i<<endl; int c[n+2] d[n+2]; for (int i=1;i<=n;++i) {   c[i]=(ar[i]-1)/mini+1;   d[i]=(ar[i]-1)%mini+1; } bool flag=true; for (int i=2;i<=n;++i) {  if ((abs(c[i]-c[i-1])+abs(d[i]-d[i-1]))!=1) flag=false; }  if (!flag||f==1) printf("NO\n");  else printf("YES\n%d %d\n" 1000000000 mini); }  ,no
#include <bits/stdc++.h>  using namespace std;  int n m a[200000] o=1e9 r=1e9;  set<int>se;  int main(){    cin >> n;    for(int i = 0; i<n; i++) cin >> a[i];    for(int i = 1; i<n; i++){      if(abs(a[i]-a[i-1])!=1)se.insert(abs(a[i]-a[i-1]));      if(!abs(a[i]-a[i-1])) return 0*printf("NO\n");    }    for(int e: se) r = e;    if(se.size()>1) return 0*printf("NO\n");    for(int i = 1; i<n; i++){      if(abs(a[i]-a[i-1])==1 && (        ((a[i]%r==0)&&(a[i-1]==a[i]+1)) ||        ((a[i]==a[i-1]+1)&&(a[i-1]%r==0))      )) return 0*printf("NO\n");    }    return 0*printf("YES\n%d %d\n"  o r);  }  ,no
#include <bits/stdc++.h>  using namespace std;  int n m a[200000] o=1e9 r=1e9;  set<int>se;  int main(){    cin >> n;    for(int i = 0; i<n; i++) cin >> a[i];    for(int i = 1; i<n; i++){      if(abs(a[i]-a[i-1])!=1)se.insert(abs(a[i]-a[i-1]));      if(!abs(a[i]-a[i-1])) return 0*printf("NO\n");    }    for(int e: se) r = e;    if(se.size()>1) return 0*printf("NO\n");    for(int i = 1; i<n; i++){      if(abs(a[i]-a[i-1])==1 && (        ((a[i]%r==0)&&(a[i-1]==a[i]+1)) ||        ((a[i]==a[i-1]+1)&&(a[i-1]%r==0))      )) return 0*printf("NO\n");    }    return 0*printf("YES\n%d %d\n"  o r);  }  ,no
#include <cstdio> #include <numeric> #include <cmath>  int as[200000];  int main(){   int N;   scanf("%d" &N);   for(int i=0;i<N;i++){     scanf("%d" &as[i]);     as[i]--;   }   int y=1;   for(int i=1;i<N;i++){     int d=std::abs(as[i-1]-as[i]);     if(d==0){       printf("NO\n");       return 0;     }     if(d!=1){       if(y==1){  y=d;       }else if(y!=d){  printf("NO\n");  return 0;       }     }   }   for(int i=1;i<N;i++){     if(std::abs(as[i]%y-as[i-1]%y)+std::abs(as[i]/y-as[i-1]/y)!=1){       printf("NO\n");       return 0;     }   }   printf("YES\n%d %d\n" (int)1e9 y);   return 0; } ,no
#include "bits/stdc++.h" using namespace std; int n  a[200005]  mx=1; int main() {     scanf("%d"  &n);     for(int i = 1; i <= n; i++)         scanf("%d"  a + i);     for(int i = 2; i <= n; i++)         mx = max(mx abs(a[i]-a[i-1]));     for(int i = 2; i <= n; i++)     {         if(mx != 1 && (a[i-1]+1 == a[i] || a[i-1]-1 == a[i]))         {             if((a[i-1]-1)/mx!=(a[i]-1)/mx)                 return puts("NO");         }         else if(a[i-1]+mx != a[i] && a[i-1]-mx!=a[i])             return puts("NO");     }     puts("YES");     cout << 1000000000 << ' ' << mx << '\n';     return 0; } ,no
#include<bits/stdc++.h>  using namespace std;    int n  a[201000]  oo=1e9  xx=oo  yy;    void zz(int x int &u int &v){    u=(x-1)/yy+1; v=(x-1)%yy+1;  }    bool chk(){    for (int i=2;i<=n;++i){      int u  v  uu  vv;      zz(a[i-1] u v);      zz(a[i] uu vv);      if (abs(u-uu)+abs(v-vv)!=1) return 0;    }    return 1;  }    int main(){    cin>>n;    if (n==1){      puts("YES"); cout<<oo<<' '<<oo; return 0;    }    for (int i=1;i<=n;++i){      scanf("%d" &a[i]);      if (i>1) yy=max(yy abs(a[i]-a[i-1]));    }    if (yy&&chk()){      puts("YES"); cout<<xx<<' '<<yy;    }else{      puts("NO");    }  },no
#include<bits/stdc++.h>  using namespace std; int n  m  x  y  a[200007];  #define NO return puts("NO")  0  int main() {   scanf("%d" &n);   if (n == 1) return puts("YES\n100 1000000000")  0;   for (int i = 1; i <= n; ++i) scanf("%d"  &a[i]);   for (int i = 2; i <= n; ++i) {    if (a[i]==a[i-1]) NO;    if(abs(a[i]-a[i-1]) != 1) {     if(!y) y = abs(a[i]-a[i-1]);     else if(y!=abs(a[i]-a[i-1])) NO;    }   }    if (y == 0) return puts("YES\n1000000000 1")  0;    for(int i = 2; i <= n; ++i) {      if (abs(a[i] - a[i-1]) == 1 && (a[i]-1)/y != (a[i-1]-1)/y) NO;    }   printf("YES\n1000000000 %d"  y);  },no
